version: 2.1
orbs:
  node: circleci/node@1.1.6
jobs:
  build-and-test:
    docker:
      - image: circleci/node:latest
        environment:
          POSTGRES_TEST_DB: circle_test
      - image: circleci/postgres
        environment:
          DB_CONNECTION: postgresql://root@postgres/circle_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: $POSTGRES_TEST_PASS
          POSTGRES_DB: circle_test

      - image: circleci/redis
    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Wait for redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m

      - run: touch .env && echo "POSTGRES_TEST_DB=$POSTGRES_TEST_DB" >> .env && cat .env

      # - run:
      #     name: install postgres client
      #     command: sudo apt-get update && sudo apt-get install postgresql-client-9.6

      # - run:
      #     psql \
      #     -U $POSTGRES_USER \
      #     -d $DB_CONNECTION
      #     -c "CREATE DATABASE $POSTGRES_TEST_DB ;"

      # -d $DB_CONNECTION \

      - node/with-cache:
          steps:
            - run: echo "testing running..."
            - run: yarn
            - run: yarn test
workflows:
  build-and-test:
    jobs:
      - build-and-test
